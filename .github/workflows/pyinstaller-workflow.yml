name: Build and Release LabAI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-release-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/req/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r req/requirements.txt
          pip install pyinstaller
      - name: Create Executable
        run: |
          pyinstaller /spec.spec
      - name: Move artifact to root
        run: mv ./dist/* ./LabAI-ubuntu

      - name: Compress artifact
        run: zip -r LabAI-ubuntu.zip ./LabAI-ubuntu

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: LabAI-ubuntu
          path: ./LabAI-ubuntu.zip

  build-and-release-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/req/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r req/requirements.txt
          pip install pyinstaller
      - name: Create Executable
        run: |
          pyinstaller /spec.spec
      - name: Move artifact to root
        run: mv ./dist/* ./LabAI-windows

      - name: Compress artifact
        run: powershell Compress-Archive -Path ./LabAI-windows/* -DestinationPath ./LabAI-windows.zip

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: LabAI-windows
          path: ./LabAI-windows.zip

  build-and-release-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install gettext
        run: brew install gettext
        shell: bash

      - name: Add gettext to PATH
        run: echo "/usr/local/opt/gettext/bin" >> $GITHUB_PATH
        shell: bash

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/req/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r req/requirements.txt
          pip install pyinstaller
      - name: Create Executable
        run: |
          pyinstaller /spec.spec
      - name: Move artifact to root
        run: mv ./dist/* ./LabAI-macos

      - name: Compress artifact
        run: zip -r LabAI-macos.zip ./LabAI-macos

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: LabAI-macos
          path: ./LabAI-macos.zip

  create-release:
    needs: [build-and-release-ubuntu, build-and-release-windows, build-and-release-macos]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get current timestamp
        id: ts
        run: echo "RELEASE_TIME=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: "v1.0.0-${{ env.RELEASE_TIME }}"
          release_name: "LabAI Release - ${{ env.RELEASE_TIME }}"
          body: "Release notes for LabAI"
          draft: false
          prerelease: false

      - name: Download Artifact - Ubuntu
        uses: actions/download-artifact@v2
        with:
          name: LabAI-ubuntu
          path: ./

      - name: Download Artifact - Windows
        uses: actions/download-artifact@v2
        with:
          name: LabAI-windows
          path: ./

      - name: Download Artifact - macOS
        uses: actions/download-artifact@v2
        with:
          name: LabAI-macos
          path: ./

      - name: Upload Release Asset - Ubuntu
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./LabAI-ubuntu.zip
          asset_name: LabAI-ubuntu-${{ env.RELEASE_TIME }}.zip
          asset_content_type: application/zip

      - name: Upload Release Asset - Windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./LabAI-windows.zip
          asset_name: LabAI-windows-${{ env.RELEASE_TIME }}.zip
          asset_content_type: application/zip

      - name: Upload Release Asset - macOS
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./LabAI-macos.zip
          asset_name: LabAI-macos-${{ env.RELEASE_TIME }}.zip
          asset_content_type: application/zip